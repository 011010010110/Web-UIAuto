{
  "uid" : "693cabdd6f02f538",
  "name" : "购买物品",
  "fullName" : "cases.test_buy.Test_Search#test_search",
  "historyId" : "b02647d8093f94864317ef683c8f350e",
  "time" : {
    "start" : 1622196050866,
    "stop" : 1622196099881,
    "duration" : 49015
  },
  "status" : "broken",
  "statusMessage" : "selenium.common.exceptions.NoSuchFrameException: Message: no such frame: element is not a frame\n  (Session info: chrome=87.0.4280.141)",
  "statusTrace" : "self = <cases.test_buy.Test_Search object at 0x7ff76bb75250>\nlistcases2 = ['进入iframe', 'intoifarme', 'xpath=//*[@id=\"address_form\"]']\n\n    @pytest.mark.parametrize('listcases2', datas['buyPage'])\n    @allure.story(\"购买物品\")\n    @pytest.mark.login\n    @pytest.mark.run(order=8)\n    def test_search(self, listcases2):\n        allure.dynamic.title(listcases2['title'])  # 获取yaml中的title\n        testcase = listcases2['cases']\n        for cases in testcase:\n            listcases2 = list(cases.values())  # 获取字典列表值\n            with allure.step(listcases2[0]):\n                func = getattr(self.web, listcases2[1])\n                values = listcases2[2:]\n>               func(*values)\n\ncases/test_buy.py:36: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ncommon/initialization.py:109: in intoifarme\n    self.driver.switch_to.frame(ele)\n/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/selenium/webdriver/remote/switch_to.py:89: in frame\n    self._driver.execute(Command.SWITCH_TO_FRAME, {'id': frame_reference})\n/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/selenium/webdriver/remote/webdriver.py:321: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7ff76c3f2760>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such frame\",\"message\":\"no such frame: element is not a frame\\\\n  (Sess...fff6beb5109 _pthread_start + 148\\\\n20  libsystem_pthread.dylib             0x00007fff6beb0b8b thread_start + 15\\\\n\"}}'}\n\n    def check_response(self, response):\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get('status', None)\n        if status is None or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get('value', None)\n            if value_json and isinstance(value_json, basestring):\n                import json\n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value['value']\n                    status = value.get('error', None)\n                    if status is None:\n                        status = value[\"status\"]\n                        message = value[\"value\"]\n                        if not isinstance(message, basestring):\n                            value = message\n                            message = message.get('message')\n                    else:\n                        message = value.get('message', None)\n                except ValueError:\n                    pass\n    \n        exception_class = ErrorInResponseException\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif status in ErrorCode.INVALID_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if value == '' or value is None:\n            value = response['value']\n        if isinstance(value, basestring):\n            if exception_class == ErrorInResponseException:\n                raise exception_class(response, value)\n            raise exception_class(value)\n        if message == \"\" and 'message' in value:\n            message = value['message']\n    \n        screen = None\n        if 'screen' in value:\n            screen = value['screen']\n    \n        stacktrace = None\n        if 'stackTrace' in value and value['stackTrace']:\n            stacktrace = []\n            try:\n                for frame in value['stackTrace']:\n                    line = self._value_or_default(frame, 'lineNumber', '')\n                    file = self._value_or_default(frame, 'fileName', '<anonymous>')\n                    if line:\n                        file = \"%s:%s\" % (file, line)\n                    meth = self._value_or_default(frame, 'methodName', '<anonymous>')\n                    if 'className' in frame:\n                        meth = \"%s.%s\" % (frame['className'], meth)\n                    msg = \"    at %s (%s)\"\n                    msg = msg % (meth, file)\n                    stacktrace.append(msg)\n            except TypeError:\n                pass\n        if exception_class == ErrorInResponseException:\n            raise exception_class(response, message)\n        elif exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if 'data' in value:\n                alert_text = value['data'].get('text')\n            elif 'alert' in value:\n                alert_text = value['alert'].get('text')\n            raise exception_class(message, screen, stacktrace, alert_text)\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchFrameException: Message: no such frame: element is not a frame\nE         (Session info: chrome=87.0.4280.141)\n\n/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/selenium/webdriver/remote/errorhandler.py:242: NoSuchFrameException",
  "flaky" : false,
  "beforeStages" : [ {
    "name" : "xunit_setup_class_fixture_Test_Search",
    "time" : {
      "start" : 1622196049825,
      "stop" : 1622196050865,
      "duration" : 1040
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "selenium.common.exceptions.NoSuchFrameException: Message: no such frame: element is not a frame\n  (Session info: chrome=87.0.4280.141)",
    "statusTrace" : "self = <cases.test_buy.Test_Search object at 0x7ff76bb75250>\nlistcases2 = ['进入iframe', 'intoifarme', 'xpath=//*[@id=\"address_form\"]']\n\n    @pytest.mark.parametrize('listcases2', datas['buyPage'])\n    @allure.story(\"购买物品\")\n    @pytest.mark.login\n    @pytest.mark.run(order=8)\n    def test_search(self, listcases2):\n        allure.dynamic.title(listcases2['title'])  # 获取yaml中的title\n        testcase = listcases2['cases']\n        for cases in testcase:\n            listcases2 = list(cases.values())  # 获取字典列表值\n            with allure.step(listcases2[0]):\n                func = getattr(self.web, listcases2[1])\n                values = listcases2[2:]\n>               func(*values)\n\ncases/test_buy.py:36: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ncommon/initialization.py:109: in intoifarme\n    self.driver.switch_to.frame(ele)\n/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/selenium/webdriver/remote/switch_to.py:89: in frame\n    self._driver.execute(Command.SWITCH_TO_FRAME, {'id': frame_reference})\n/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/selenium/webdriver/remote/webdriver.py:321: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7ff76c3f2760>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such frame\",\"message\":\"no such frame: element is not a frame\\\\n  (Sess...fff6beb5109 _pthread_start + 148\\\\n20  libsystem_pthread.dylib             0x00007fff6beb0b8b thread_start + 15\\\\n\"}}'}\n\n    def check_response(self, response):\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get('status', None)\n        if status is None or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get('value', None)\n            if value_json and isinstance(value_json, basestring):\n                import json\n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value['value']\n                    status = value.get('error', None)\n                    if status is None:\n                        status = value[\"status\"]\n                        message = value[\"value\"]\n                        if not isinstance(message, basestring):\n                            value = message\n                            message = message.get('message')\n                    else:\n                        message = value.get('message', None)\n                except ValueError:\n                    pass\n    \n        exception_class = ErrorInResponseException\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif status in ErrorCode.INVALID_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if value == '' or value is None:\n            value = response['value']\n        if isinstance(value, basestring):\n            if exception_class == ErrorInResponseException:\n                raise exception_class(response, value)\n            raise exception_class(value)\n        if message == \"\" and 'message' in value:\n            message = value['message']\n    \n        screen = None\n        if 'screen' in value:\n            screen = value['screen']\n    \n        stacktrace = None\n        if 'stackTrace' in value and value['stackTrace']:\n            stacktrace = []\n            try:\n                for frame in value['stackTrace']:\n                    line = self._value_or_default(frame, 'lineNumber', '')\n                    file = self._value_or_default(frame, 'fileName', '<anonymous>')\n                    if line:\n                        file = \"%s:%s\" % (file, line)\n                    meth = self._value_or_default(frame, 'methodName', '<anonymous>')\n                    if 'className' in frame:\n                        meth = \"%s.%s\" % (frame['className'], meth)\n                    msg = \"    at %s (%s)\"\n                    msg = msg % (meth, file)\n                    stacktrace.append(msg)\n            except TypeError:\n                pass\n        if exception_class == ErrorInResponseException:\n            raise exception_class(response, message)\n        elif exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if 'data' in value:\n                alert_text = value['data'].get('text')\n            elif 'alert' in value:\n                alert_text = value['alert'].get('text')\n            raise exception_class(message, screen, stacktrace, alert_text)\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchFrameException: Message: no such frame: element is not a frame\nE         (Session info: chrome=87.0.4280.141)\n\n/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/selenium/webdriver/remote/errorhandler.py:242: NoSuchFrameException",
    "steps" : [ {
      "name" : "清除搜索框内的文字",
      "time" : {
        "start" : 1622196050866,
        "stop" : 1622196050904,
        "duration" : 38
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "搜索框输入iphone",
      "time" : {
        "start" : 1622196054906,
        "stop" : 1622196055013,
        "duration" : 107
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "点击搜索按钮",
      "time" : {
        "start" : 1622196059018,
        "stop" : 1622196059742,
        "duration" : 724
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "点击第一个",
      "time" : {
        "start" : 1622196063745,
        "stop" : 1622196064315,
        "duration" : 570
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "点击加入购物车",
      "time" : {
        "start" : 1622196068320,
        "stop" : 1622196068374,
        "duration" : 54
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "进入进入iframe",
      "time" : {
        "start" : 1622196072375,
        "stop" : 1622196072414,
        "duration" : 39
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "固定等待",
      "time" : {
        "start" : 1622196076419,
        "stop" : 1622196078420,
        "duration" : 2001
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "点击继续购物",
      "time" : {
        "start" : 1622196082425,
        "stop" : 1622196082573,
        "duration" : 148
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "点击我的购物车",
      "time" : {
        "start" : 1622196086574,
        "stop" : 1622196086950,
        "duration" : 376
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "点击去结算",
      "time" : {
        "start" : 1622196090952,
        "stop" : 1622196091759,
        "duration" : 807
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "点击去结算",
      "time" : {
        "start" : 1622196095762,
        "stop" : 1622196095837,
        "duration" : 75
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "进入iframe",
      "time" : {
        "start" : 1622196099842,
        "stop" : 1622196099879,
        "duration" : 37
      },
      "status" : "broken",
      "statusMessage" : "selenium.common.exceptions.NoSuchFrameException: Message: no such frame: element is not a frame\n  (Session info: chrome=87.0.4280.141)\n\n",
      "statusTrace" : "  File \"/Users/liuyue/Desktop/workspace/cases/test_buy.py\", line 36, in test_search\n    func(*values)\n  File \"/Users/liuyue/Desktop/workspace/common/initialization.py\", line 109, in intoifarme\n    self.driver.switch_to.frame(ele)\n  File \"/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/selenium/webdriver/remote/switch_to.py\", line 89, in frame\n    self._driver.execute(Command.SWITCH_TO_FRAME, {'id': frame_reference})\n  File \"/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/selenium/webdriver/remote/webdriver.py\", line 321, in execute\n    self.error_handler.check_response(response)\n  File \"/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/selenium/webdriver/remote/errorhandler.py\", line 242, in check_response\n    raise exception_class(message, screen, stacktrace)\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 12,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "xunit_setup_class_fixture_Test_Search::0",
    "time" : {
      "start" : 1622196099918,
      "stop" : 1622196099919,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "story",
    "value" : "购买物品"
  }, {
    "name" : "feature",
    "value" : "购买物品"
  }, {
    "name" : "tag",
    "value" : "run(order=8)"
  }, {
    "name" : "tag",
    "value" : "login"
  }, {
    "name" : "parentSuite",
    "value" : "cases"
  }, {
    "name" : "suite",
    "value" : "test_buy"
  }, {
    "name" : "subSuite",
    "value" : "Test_Search"
  }, {
    "name" : "host",
    "value" : "liuyuedeMacBook-Pro.local"
  }, {
    "name" : "thread",
    "value" : "35325-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "cases.test_buy"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "listcases2",
    "value" : "{'title': '购买物品', 'cases': [{'name': '清除搜索框内的文字', 'method': 'clear', 'locator': 'xpath=//*[@id=\"q\"]'}, {'name': '搜索框输入iphone', 'method': 'input', 'locator': 'xpath=//*[@id=\"q\"]', 'value': 'iphone'}, {'name': '点击搜索按钮', 'method': 'click', 'locator': 'xpath=//*[@id=\"searchForm\"]/button'}, {'name': '点击第一个', 'method': 'click', 'locator': 'xpath=/html/body/div[4]/div/div[2]/div[2]/ul/li[1]/div/div[1]/a/img'}, {'name': '点击加入购物车', 'method': 'click', 'locator': 'xpath=//*[@id=\"join_cart\"]'}, {'name': '进入进入iframe', 'method': 'intoifarme', 'locator': 'xpath=//*[@id=\"layui-layer-iframe1\"]'}, {'name': '固定等待', 'method': 'sleep', 'time': 2}, {'name': '点击继续购物', 'method': 'click', 'locator': 'xpath=//*[@id=\"addCartBox\"]/div[1]/div/div/a[1]'}, {'name': '点击我的购物车', 'method': 'click', 'locator': 'xpath=//*[@id=\"hd-my-cart\"]/a/div'}, {'name': '点击去结算', 'method': 'click', 'locator': 'xpath=/html/body/div[4]/div/div/div/div[2]/div[2]/div[1]/a'}, {'name': '点击去结算', 'method': 'click', 'locator': 'xpath=//*[@id=\"addNewAddress\"]'}, {'name': '进入iframe', 'method': 'intoifarme', 'locator': 'xpath=//*[@id=\"address_form\"]'}, {'name': '输入名字', 'method': 'input', 'locator': 'xpath=//*[@id=\"address_form\"]/div[2]/div/div[2]/div[1]/div/input', 'value': 'June'}, {'name': '电话', 'method': 'input', 'locator': 'xpath=//*[@id=\"address_form\"]/div[2]/div/div[2]/div[2]/div/input', 'value': 18030067086}, {'name': '点击北京市', 'method': 'click', 'locator': 'xpath=//*[@id=\"province\"]/option[1]'}, {'name': '点击北京市', 'method': 'click', 'locator': 'xpath=//*[@id=\"province\"]/option[1]'}, {'name': '点击市辖区', 'method': 'click', 'locator': 'xpath=//*[@id=\"city\"]/option[1]'}, {'name': '点击大兴区', 'method': 'click', 'locator': 'xpath=//*[@id=\"district\"]/option[15]'}, {'name': '点击清源街道', 'method': 'click', 'locator': 'xpath=//*[@id=\"twon\"]/option[3]'}, {'name': '详细住址', 'method': 'input', 'locator': 'xpath=//*[@id=\"address_form\"]/div[2]/div/div[2]/div[4]/div/input', 'value': '翻斗花园翻斗楼'}, {'name': '邮编', 'method': 'input', 'locator': 'xpath=//*[@id=\"address_form\"]/div[2]/div/div[2]/div[5]/div/input', 'value': 102601}, {'name': '点击保存', 'method': 'click', 'locator': 'xpath=//*[@id=\"address_submit\"]'}, {'name': '点击更多地址', 'method': 'click', 'locator': 'xpath=//*[@id=\"ajax_address\"]/div[3]/span'}, {'name': '点击第二个', 'method': 'click', 'locator': 'xpath=//*[@id=\"ajax_address\"]/div[2]/ul/li[2]/div[1]'}, {'name': '点击提交', 'method': 'click', 'locator': 'xpath=/html/body/div[14]/div/button'}]}"
  } ],
  "links" : [ ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ "login", "run(order=8)" ]
  },
  "source" : "693cabdd6f02f538.json",
  "parameterValues" : [ "{'title': '购买物品', 'cases': [{'name': '清除搜索框内的文字', 'method': 'clear', 'locator': 'xpath=//*[@id=\"q\"]'}, {'name': '搜索框输入iphone', 'method': 'input', 'locator': 'xpath=//*[@id=\"q\"]', 'value': 'iphone'}, {'name': '点击搜索按钮', 'method': 'click', 'locator': 'xpath=//*[@id=\"searchForm\"]/button'}, {'name': '点击第一个', 'method': 'click', 'locator': 'xpath=/html/body/div[4]/div/div[2]/div[2]/ul/li[1]/div/div[1]/a/img'}, {'name': '点击加入购物车', 'method': 'click', 'locator': 'xpath=//*[@id=\"join_cart\"]'}, {'name': '进入进入iframe', 'method': 'intoifarme', 'locator': 'xpath=//*[@id=\"layui-layer-iframe1\"]'}, {'name': '固定等待', 'method': 'sleep', 'time': 2}, {'name': '点击继续购物', 'method': 'click', 'locator': 'xpath=//*[@id=\"addCartBox\"]/div[1]/div/div/a[1]'}, {'name': '点击我的购物车', 'method': 'click', 'locator': 'xpath=//*[@id=\"hd-my-cart\"]/a/div'}, {'name': '点击去结算', 'method': 'click', 'locator': 'xpath=/html/body/div[4]/div/div/div/div[2]/div[2]/div[1]/a'}, {'name': '点击去结算', 'method': 'click', 'locator': 'xpath=//*[@id=\"addNewAddress\"]'}, {'name': '进入iframe', 'method': 'intoifarme', 'locator': 'xpath=//*[@id=\"address_form\"]'}, {'name': '输入名字', 'method': 'input', 'locator': 'xpath=//*[@id=\"address_form\"]/div[2]/div/div[2]/div[1]/div/input', 'value': 'June'}, {'name': '电话', 'method': 'input', 'locator': 'xpath=//*[@id=\"address_form\"]/div[2]/div/div[2]/div[2]/div/input', 'value': 18030067086}, {'name': '点击北京市', 'method': 'click', 'locator': 'xpath=//*[@id=\"province\"]/option[1]'}, {'name': '点击北京市', 'method': 'click', 'locator': 'xpath=//*[@id=\"province\"]/option[1]'}, {'name': '点击市辖区', 'method': 'click', 'locator': 'xpath=//*[@id=\"city\"]/option[1]'}, {'name': '点击大兴区', 'method': 'click', 'locator': 'xpath=//*[@id=\"district\"]/option[15]'}, {'name': '点击清源街道', 'method': 'click', 'locator': 'xpath=//*[@id=\"twon\"]/option[3]'}, {'name': '详细住址', 'method': 'input', 'locator': 'xpath=//*[@id=\"address_form\"]/div[2]/div/div[2]/div[4]/div/input', 'value': '翻斗花园翻斗楼'}, {'name': '邮编', 'method': 'input', 'locator': 'xpath=//*[@id=\"address_form\"]/div[2]/div/div[2]/div[5]/div/input', 'value': 102601}, {'name': '点击保存', 'method': 'click', 'locator': 'xpath=//*[@id=\"address_submit\"]'}, {'name': '点击更多地址', 'method': 'click', 'locator': 'xpath=//*[@id=\"ajax_address\"]/div[3]/span'}, {'name': '点击第二个', 'method': 'click', 'locator': 'xpath=//*[@id=\"ajax_address\"]/div[2]/ul/li[2]/div[1]'}, {'name': '点击提交', 'method': 'click', 'locator': 'xpath=/html/body/div[14]/div/button'}]}" ]
}